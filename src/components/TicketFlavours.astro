---
import { techs, defaultTechId } from '@components/FlavourTechs.astro'
import { getTicketDataByUsername } from 'src/services/get-ticket'

const { username } = Astro.params
const { data: ticketData } = await getTicketDataByUsername(username)
const flavour = ticketData?.flavour || defaultTechId
---

<div id='select-flavour' class='relative flex-col justify-center hidden h-auto p-8 lg:p-0'>
	<div
		class='relative w-full max-w-4xl grid-cols-2 px-0 pt-4 text-lg font-bold text-center text-gray-900 no-underline whitespace-no-wrap align-middle bg-white border-2 border-gray-900 border-solid rounded-md shadow-xs select-none hover:shadow-xs focus:shadow-xs'>
		<div class='-z-10 w-full h-full bg-gray-900 ml-0.5 mt-0.5 rounded-lg absolute left-0 top-0'></div>
		<h3 class='text-lg text-center'>Elige el sabor de tu ticket</h3>
		<ul id='select' class='flex flex-wrap items-center justify-center overflow-y-auto overflow-x-hidden max-h-[75vh] pb-2'>
			{techs.map(({ tech, Icon }) => {
				return (
					<li class='flex items-center justify-center'>
						<button data-tech={tech} class={`button-ticket ${flavour === tech ? 'flavour-selected' : ''}`}>
							<Icon />
						</button>
					</li>
				)
			})}
		</ul>
	</div>
</div>

<script define:vars={{ tech: flavour }}>
const styles = {
	react: {
		borderColor: '#007acca3',
		backgroundColor: '#1bceffee',
		textColor: '#e0f2ff'
	},
	vue: {
		borderColor: 'rgb(6 95 70 / 0.5)',
		backgroundColor: 'rgb(209 250 229 / 0.5)',
		textColor: 'rgb(16 185 129)'
	},
	svelte: {
		borderColor: '#be7b00',
		backgroundColor: '#ff3d0078',
		textColor: '#764c00'
	},
	angular: {
		borderColor: '#ae000075',
		backgroundColor: '#ff00004a',
		textColor: '#7d0000'
	},
	bun: {
		borderColor: 'rgba(239, 195, 128, 1)',
		backgroundColor: 'rgba(251, 240, 223, 0.86)',
		textColor: 'rgba(245, 182, 86, 1)'
	},
	vite: {
		borderColor: 'rgba(100, 108, 255, 1)',
		backgroundColor: '#afb3ffc2',
		textColor: '#4148bd'
	},
	vscode: {
		borderColor: 'rgba(0, 120, 215, 1)',
		backgroundColor: 'rgba(88, 181, 255, .35)',
		textColor: '#4148bd'
	},
	github: {
		borderColor: 'rgba(0, 0, 0, 1)',
		backgroundColor: 'rgba(255, 255, 255, .7)',
		textColor: '#111'
	},
	javascript: {
		borderColor: 'rgba(111, 111, 111, 1)',
		backgroundColor: 'rgba(255, 245, 58, 0.8)',
		textColor: '#111'
	},
	node: {
		borderColor: '#00ff50',
		backgroundColor: '#21573238',
		textColor: '#83CD29'
	},
	nextjs: {
		borderColor: '#000',
		backgroundColor: 'rgba(255, 255, 255, .8)',
		textColor: '#000'
	},
	typescript: {
		borderColor: '#007acc',
		backgroundColor: 'rgb(0 150 255 / 43%)',
		textColor: '#007acc'
	},
	html5: {
		borderColor: '#f1652a',
		backgroundColor: 'rgb(230 97 41 / 14%)',
		textColor: '#f1652a'
	},
	css3: {
		borderColor: '#1172b6',
		backgroundColor: 'rgb(51 169 220 / 22%)',
		textColor: '#1172b6'
	},
	astro: {
		borderColor: '#000',
		backgroundColor: '#ff00004a',
		textColor: '#000'
	},
	preact: {
		borderColor: '#673AB8',
		backgroundColor: '#b08ef1b5',
		textColor: '#21133a'
	},
	solid: {
		borderColor: '#4377BB',
		backgroundColor: 'rgb(168 219 255 / 60%)',
		textColor: '#4377BB'
	}
}

const updateCustomProperties = (tech) => {
	const {
		borderColor,
		backgroundColor,
		textColor
	} = styles[tech] ?? styles.javascript

	document.documentElement.style.setProperty('--border-card', borderColor)
	document.documentElement.style.setProperty('--background-card', backgroundColor)
	document.documentElement.style.setProperty('--text-card', textColor)
}

updateCustomProperties(tech)

document.querySelectorAll('#select button').forEach(button => button.addEventListener('click', (event) => {
	const { currentTarget } = event

	const tech = currentTarget.getAttribute('data-tech')

	const currentActive = document.querySelector('#select .flavour-selected')

	currentActive?.classList.remove('flavour-selected')
	currentTarget.classList.add('flavour-selected')

	updateCustomProperties(tech)

	document.querySelector('#card-icon').innerHTML = currentTarget.innerHTML
}))
</script>
